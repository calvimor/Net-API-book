// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Nexos.CAVM.API.Context;

namespace Nexos.CAVM.API.Migrations
{
    [DbContext(typeof(ProjectContext))]
    [Migration("20210615035416_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Nexos.CAVM.API.Entities.Author", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("CityFrom")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d28888e9-2ba9-473a-a40f-e38cb54f9b35"),
                            Birthday = new DateTime(1950, 7, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CityFrom = "Mendoza, AR",
                            CreatedTime = new DateTime(1950, 7, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "pablo.m@email.com",
                            LastUpdatedTime = new DateTime(2021, 6, 14, 22, 54, 15, 252, DateTimeKind.Local).AddTicks(8991),
                            Name = "Pablo Muñoz"
                        },
                        new
                        {
                            Id = new Guid("da2fd609-d754-4feb-8acd-c4f9ff13ba96"),
                            Birthday = new DateTime(1927, 3, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CityFrom = "Aracataca, CO",
                            CreatedTime = new DateTime(1950, 7, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedTime = new DateTime(2021, 6, 14, 22, 54, 15, 256, DateTimeKind.Local).AddTicks(7463),
                            Name = "Gabriel Garcia Marquez"
                        });
                });

            modelBuilder.Entity("Nexos.CAVM.API.Entities.Book", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Genre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("NumberPages")
                        .HasColumnType("int");

                    b.Property<Guid>("PublisherId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("PublisherId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = new Guid("40ff5488-fdab-45b5-bc3a-14302d59869a"),
                            AuthorId = new Guid("d28888e9-2ba9-473a-a40f-e38cb54f9b35"),
                            CreatedTime = new DateTime(2021, 6, 14, 22, 54, 15, 260, DateTimeKind.Local).AddTicks(2538),
                            Genre = "Actualidad",
                            LastUpdatedTime = new DateTime(2021, 6, 14, 22, 54, 15, 260, DateTimeKind.Local).AddTicks(2550),
                            NumberPages = 250,
                            PublisherId = new Guid("2902b665-1190-4c70-9915-b9c2d7680450"),
                            Title = "Las mentiras que te cuentan, las verdades que te ocultan",
                            Year = 2021
                        },
                        new
                        {
                            Id = new Guid("d173e20d-159e-9907-9ce9-b0ac2564ad97"),
                            AuthorId = new Guid("da2fd609-d754-4feb-8acd-c4f9ff13ba96"),
                            CreatedTime = new DateTime(2021, 6, 14, 22, 54, 15, 260, DateTimeKind.Local).AddTicks(2578),
                            Genre = "Novela",
                            LastUpdatedTime = new DateTime(2021, 6, 14, 22, 54, 15, 260, DateTimeKind.Local).AddTicks(2580),
                            NumberPages = 471,
                            PublisherId = new Guid("102b566b-ba1f-404c-b2df-e2cde39ade09"),
                            Title = "Cien años de soledad",
                            Year = 1967
                        });
                });

            modelBuilder.Entity("Nexos.CAVM.API.Entities.Publisher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("MaxNumberBook")
                        .HasColumnType("int");

                    b.Property<string>("PublisherEmail")
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)");

                    b.Property<string>("PublisherName")
                        .IsRequired()
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Publishers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2902b665-1190-4c70-9915-b9c2d7680450"),
                            Address = "Canadá",
                            CreatedTime = new DateTime(2021, 6, 14, 22, 54, 15, 259, DateTimeKind.Local).AddTicks(6963),
                            LastUpdatedTime = new DateTime(2021, 6, 14, 22, 54, 15, 259, DateTimeKind.Local).AddTicks(6982),
                            MaxNumberBook = 3,
                            PublisherEmail = "editorial@metanoia.com",
                            PublisherName = "Metanoia Press",
                            Telephone = "3158889987"
                        },
                        new
                        {
                            Id = new Guid("102b566b-ba1f-404c-b2df-e2cde39ade09"),
                            Address = "Argentina",
                            CreatedTime = new DateTime(2021, 6, 14, 22, 54, 15, 259, DateTimeKind.Local).AddTicks(7007),
                            LastUpdatedTime = new DateTime(2021, 6, 14, 22, 54, 15, 259, DateTimeKind.Local).AddTicks(7009),
                            MaxNumberBook = -1,
                            PublisherEmail = "editorial@sudamericana.com",
                            PublisherName = "Sudamericana",
                            Telephone = "3150009987"
                        });
                });

            modelBuilder.Entity("Nexos.CAVM.API.Entities.Book", b =>
                {
                    b.HasOne("Nexos.CAVM.API.Entities.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Nexos.CAVM.API.Entities.Publisher", "Publisher")
                        .WithMany("Books")
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("Nexos.CAVM.API.Entities.Author", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("Nexos.CAVM.API.Entities.Publisher", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
